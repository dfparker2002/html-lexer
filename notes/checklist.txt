Checklist - States in the HTML5 specification
=============================================

This is a checklist of all the tokenizer states suggested
in the HTML5 specification. A checked box [*] means that the
state is implemented, [=] means that its functionality is
implemented in a different but equivalent mannar. 
Unsupported states are marked by [ ]. 


Tags and attributes
-------------------

[*] After attribute name
[*] After attribute value (quoted)
[*] Attribute name
[=] Attribute value (double-quoted)
[=] Attribute value (single-quoted)
[*] Attribute value (unquoted)
[*] Before attribute name
[*] Before attribute value
[*] Bogus comment
[*] Comment
[*] Comment end
[*] Comment end dash
[*] Comment start
[*] Comment start dash
[*] Data
[*] End tag open
[*] Markup declaration open
[*] Self-closing start tag
[*] Tag name
[*] Tag open
[=] Character reference in attribute value
[=] Character reference in data
[*] Comment end bang
[*] Tokenizing character references

[*] EOF branches
[ ] NULL character branches

The Attribute value (double-quoted) and Attribute value (single-quoted)
are implemented via a bit of additional state that sotres the opening quote. 
(e.g. single vs. double-quoted)


CDATA, RCDATA, Script, RAWTEXT, PLAINTEXT
-----------------------------------------

[*] RAWTEXT
[=] RAWTEXT less-than sign
[=] RAWTEXT end tag open
[=] RAWTEXT end tag name

[*] RCDATA
[=] Character reference in RCDATA
[=] RCDATA less-than sign
[=] RCDATA end tag open
[=] RCDATA end tag name

[*] PLAINTEXT
[ ] CDATA section

CDATA is not supported. 
The lexer interprets CDATA sections as bogus comments. 
(CDATA is only allowed in foreign content - svg and mathml.)


DOCTYPE
-------

The doctype states are not implemented. 
The lexer parses doctype tags as bogus comments. 

[ ] DOCTYPE
[ ] Before DOCTYPE name
[ ] DOCTYPE name
[ ] After DOCTYPE name
[ ] After DOCTYPE public keyword
[ ] Before DOCTYPE public identifier
[ ] DOCTYPE public identifier (double-quoted)
[ ] DOCTYPE public identifier (single-quoted)
[ ] After DOCTYPE public identifier
[ ] Between DOCTYPE public and system identifiers
[ ] After DOCTYPE system keyword
[ ] Before DOCTYPE system identifier
[ ] DOCTYPE system identifier (double-quoted)
[ ] DOCTYPE system identifier (single-quoted)
[ ] After DOCTYPE system identifier
[ ] Bogus DOCTYPE


Script Data
-----------

This will not be supported. 
the lexer interprets script tags as rawtext elements. 

[ ] Script data
[ ] Script data less-than sign
[ ] Script data end tag open
[ ] Script data end tag name
[ ] Script data escape start
[ ] Script data escape start dash
[ ] Script data escaped
[ ] Script data escaped dash
[ ] Script data escaped dash dash
[ ] Script data escaped less-than sign
[ ] Script data escaped end tag open
[ ] Script data escaped end tag name
[ ] Script data double escape start
[ ] Script data double escaped
[ ] Script data double escaped dash
[ ] Script data double escaped dash dash
[ ] Script data double escaped less-than sign
[ ] Script data double escape end


Deviations from the specification
---------------------------------

The "RAWTEXT end tag" and "RCDATA end tag" states are
implemented in a different but equivalent mannar, via

* lessThanSignIn_ (for context: rcdata, rawtext)
* endTagOpenIn_ (for context: rcdata, rawtest)

The character references are implemented via a number of
additional states, rather than trying to implement the algorithm
suggested in the specification, which is not very clean, nor clear. 

* charRefIn_ (for context: data, rcdata, rawtext)
* numericCharRef
* decimalCharRef
* hexadecimalCharRef
* hexDigits
* namedCharRef

Character references in attribute values are not (yet) implemented. 

